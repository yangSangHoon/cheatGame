"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var buttonModule = require("ui/button");
var absolute_layout_1 = require("ui/layouts/absolute-layout");
var User = (function () {
    function User(view) {
        this.move = 0;
        this.view = view;
        this.btn = view.getViewById('btn');
        this.player = view.getViewById('player');
        this.move = Number(view.move);
        this.setPosition();
        this.eventSetting();
    }
    User.prototype.setPosition = function () {
        this.view.style.position = 'absolute';
        this.btn.style.position = 'absolute';
        this.player.style.position = 'absolute';
        if (this.move === 1) {
            this.view.style.top = 0;
        }
        else {
            this.view.style.top = 500;
            this.btn.style.top = '300px';
            this.player.style.top = 300;
        }
    };
    User.prototype.eventSetting = function () {
        var _this = this;
        this.btn.on(buttonModule.Button.tapEvent, function () {
            var top = absolute_layout_1.AbsoluteLayout.getTop(_this.player);
            var tarTop = Number(top) + 1;
            console.log(tarTop);
            absolute_layout_1.AbsoluteLayout.setTop(_this.player, tarTop);
            //this.player.top = ( Number(this.player.style.top) + this.move );
        });
    };
    User.prototype.setMove = function (value) {
    };
    return User;
}());
function onLoad(args) {
    new User(args.object);
}
exports.onLoad = onLoad;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInVzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBMkM7QUFDM0MsOERBQTBEO0FBRTFEO0lBTUksY0FBWSxJQUFJO1FBSFIsU0FBSSxHQUFXLENBQUMsQ0FBQztRQUlyQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCwwQkFBVyxHQUFYO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFDLFVBQVUsQ0FBQztRQUNwQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUMsVUFBVSxDQUFDO1FBQ25DLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBQyxVQUFVLENBQUM7UUFDdEMsRUFBRSxDQUFBLENBQUUsSUFBSSxDQUFDLElBQUksS0FBSyxDQUFFLENBQUMsQ0FBQSxDQUFDO1lBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBQyxDQUFDLENBQUM7UUFDMUIsQ0FBQztRQUFBLElBQUksQ0FBQSxDQUFDO1lBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFDLEdBQUcsQ0FBQztZQUN4QixJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUMsT0FBTyxDQUFDO1lBQzNCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBQyxHQUFHLENBQUM7UUFDOUIsQ0FBQztJQUNMLENBQUM7SUFFRCwyQkFBWSxHQUFaO1FBQUEsaUJBUUM7UUFQRyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUN0QyxJQUFNLEdBQUcsR0FBRyxnQ0FBYyxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDL0MsSUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3BCLGdDQUFjLENBQUMsTUFBTSxDQUFDLEtBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDM0Msa0VBQWtFO1FBQ3RFLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELHNCQUFPLEdBQVAsVUFBUSxLQUFLO0lBRWIsQ0FBQztJQUNMLFdBQUM7QUFBRCxDQUFDLEFBekNELElBeUNDO0FBR0QsZ0JBQXVCLElBQVM7SUFDNUIsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzFCLENBQUM7QUFGRCx3QkFFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBidXR0b25Nb2R1bGUgPSByZXF1aXJlKFwidWkvYnV0dG9uXCIpO1xuaW1wb3J0IHtBYnNvbHV0ZUxheW91dH0gZnJvbSAndWkvbGF5b3V0cy9hYnNvbHV0ZS1sYXlvdXQnO1xuXG5jbGFzcyBVc2Vye1xuICAgIHByaXZhdGUgdmlldztcbiAgICBwcml2YXRlIGJ0bjtcbiAgICBwcml2YXRlIG1vdmU6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBwbGF5ZXI7XG5cbiAgICBjb25zdHJ1Y3Rvcih2aWV3KXtcbiAgICAgICAgdGhpcy52aWV3ID0gdmlldztcbiAgICAgICAgdGhpcy5idG4gPSB2aWV3LmdldFZpZXdCeUlkKCdidG4nKTtcbiAgICAgICAgdGhpcy5wbGF5ZXIgPSB2aWV3LmdldFZpZXdCeUlkKCdwbGF5ZXInKTtcbiAgICAgICAgdGhpcy5tb3ZlID0gTnVtYmVyKHZpZXcubW92ZSk7XG4gICAgICAgIHRoaXMuc2V0UG9zaXRpb24oKTtcbiAgICAgICAgdGhpcy5ldmVudFNldHRpbmcoKTtcbiAgICB9XG5cbiAgICBzZXRQb3NpdGlvbigpIHtcbiAgICAgICAgdGhpcy52aWV3LnN0eWxlLnBvc2l0aW9uPSdhYnNvbHV0ZSc7XG4gICAgICAgIHRoaXMuYnRuLnN0eWxlLnBvc2l0aW9uPSdhYnNvbHV0ZSc7XG4gICAgICAgIHRoaXMucGxheWVyLnN0eWxlLnBvc2l0aW9uPSdhYnNvbHV0ZSc7XG4gICAgICAgIGlmKCB0aGlzLm1vdmUgPT09IDEgKXtcbiAgICAgICAgICAgIHRoaXMudmlldy5zdHlsZS50b3A9MDtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLnZpZXcuc3R5bGUudG9wPTUwMDtcbiAgICAgICAgICAgIHRoaXMuYnRuLnN0eWxlLnRvcD0nMzAwcHgnO1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXIuc3R5bGUudG9wPTMwMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGV2ZW50U2V0dGluZygpIHtcbiAgICAgICAgdGhpcy5idG4ub24oYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdG9wID0gQWJzb2x1dGVMYXlvdXQuZ2V0VG9wKHRoaXMucGxheWVyKTtcbiAgICAgICAgICAgIGNvbnN0IHRhclRvcCA9IE51bWJlcih0b3ApICsgMTsgICBcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRhclRvcCk7XG4gICAgICAgICAgICBBYnNvbHV0ZUxheW91dC5zZXRUb3AodGhpcy5wbGF5ZXIsIHRhclRvcCk7XG4gICAgICAgICAgICAvL3RoaXMucGxheWVyLnRvcCA9ICggTnVtYmVyKHRoaXMucGxheWVyLnN0eWxlLnRvcCkgKyB0aGlzLm1vdmUgKTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBzZXRNb3ZlKHZhbHVlKSB7XG5cbiAgICB9XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIG9uTG9hZChhcmdzOiBhbnkpIHtcbiAgICBuZXcgVXNlcihhcmdzLm9iamVjdCk7XG59XG4iXX0=