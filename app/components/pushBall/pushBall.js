"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var buttonModule = require("ui/button");
var absolute_layout_1 = require("ui/layouts/absolute-layout");
var Event_1 = require("../../event/Event");
var utils_1 = require("../../utils/utils");
var PushBall = (function () {
    function PushBall(view) {
        this.user1 = null;
        this.user2 = null;
        this.ball = null;
        this.stage = null;
        this.refresh = null;
        this.timer = null;
        this.restTime = 0;
        this.currentTop = 0;
        this.user1MoveNum = 10;
        this.user2MoveNum = 10;
        this.stageHeight = 0;
        this.bottomEndTop = 0;
        this.middleTop = 0;
        this.user1 = view.getViewById('user1');
        this.user2 = view.getViewById('user2');
        this.ball = view.getViewById('ball');
        this.refresh = view.getViewById('refresh');
        this.stage = view.getViewById('stage');
        this.timer = view.getViewById('timer');
        this.init();
    }
    PushBall.prototype.init = function () {
        this.user1.text = 'player1';
        this.user2.text = 'player2';
        this.refresh.visibility = 'collapsed';
        this.user1.backgroundColor = '#fff7d3';
        this.user2.backgroundColor = '#fff7d3';
        this.user1.color = '#000';
        this.user2.color = '#000';
        this.restTime = 15;
        this.setTime();
        this.setPosition();
        this.eventSetting();
        this.playTimer();
    };
    PushBall.prototype.setTime = function () {
        this.timer.text = this.restTime;
    };
    PushBall.prototype.playTimer = function () {
        var _this = this;
        this.interval = setInterval(function () {
            _this.restTime--;
            _this.setTime();
            if (_this.restTime === 0) {
                _this.gameOver();
            }
        }, 1000);
    };
    PushBall.prototype.setPosition = function () {
        var playerHeight = utils_1.getHeight(this.user1);
        var ballHeight = utils_1.getHeight(this.ball);
        this.stageHeight = utils_1.getHeight(this.stage);
        this.bottomEndTop = this.stageHeight - ballHeight;
        this.middleTop = this.stageHeight / 2 - ballHeight / 2;
        this.currentTop = this.middleTop;
        absolute_layout_1.AbsoluteLayout.setTop(this.ball, this.currentTop);
        absolute_layout_1.AbsoluteLayout.setTop(this.refresh, this.currentTop);
        absolute_layout_1.AbsoluteLayout.setTop(this.user2, this.stageHeight - playerHeight);
    };
    PushBall.prototype.eventSetting = function () {
        var _this = this;
        this.user1.on(buttonModule.Button.tapEvent, function () {
            _this.moveBall(_this.user1MoveNum);
            if (_this.currentTop > _this.bottomEndTop) {
                absolute_layout_1.AbsoluteLayout.setTop(_this.ball, _this.bottomEndTop);
                _this.gameOver();
            }
        });
        this.user2.on(buttonModule.Button.tapEvent, function () {
            _this.moveBall(-_this.user2MoveNum);
            if (_this.currentTop < 0) {
                absolute_layout_1.AbsoluteLayout.setTop(_this.ball, 0);
                _this.gameOver();
            }
        });
        this.refresh.on(buttonModule.Button.tapEvent, function () {
            _this.init();
        });
        Event_1.default.on('VOLUME_UP', function () {
            _this.user1MoveNum = 100;
            _this.user2MoveNum = 5;
        });
        Event_1.default.on('VOLUME_DOWN', function () {
            _this.user1MoveNum = 5;
            _this.user2MoveNum = 100;
        });
    };
    PushBall.prototype.checkWinner = function () {
        if (this.currentTop > this.middleTop) {
            this.user1.text = 'winner';
            this.user2.text = 'loser';
        }
        else {
            this.user1.text = 'loser';
            this.user2.text = 'winner';
        }
    };
    PushBall.prototype.gameOver = function () {
        this.user1.off(buttonModule.Button.tapEvent);
        this.user2.off(buttonModule.Button.tapEvent);
        this.user1.backgroundColor = '#333';
        this.user2.backgroundColor = '#333';
        this.user1.color = '#fff';
        this.user2.color = '#fff';
        this.refresh.visibility = 'visible';
        clearInterval(this.interval);
        this.checkWinner();
    };
    PushBall.prototype.moveBall = function (value) {
        this.currentTop += value;
        absolute_layout_1.AbsoluteLayout.setTop(this.ball, this.currentTop);
    };
    return PushBall;
}());
exports.navigated = function (args) {
    new PushBall(args.object);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaEJhbGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJwdXNoQmFsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdDQUEyQztBQUMzQyw4REFBMEQ7QUFDMUQsMkNBQXNDO0FBQ3RDLDJDQUE0QztBQUU1QztJQW9CSSxrQkFBWSxJQUFJO1FBbEJSLFVBQUssR0FBRyxJQUFJLENBQUM7UUFDYixVQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2IsU0FBSSxHQUFHLElBQUksQ0FBQztRQUNaLFVBQUssR0FBRyxJQUFJLENBQUM7UUFDYixZQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ2YsVUFBSyxHQUFHLElBQUksQ0FBQztRQUNiLGFBQVEsR0FBVyxDQUFDLENBQUM7UUFDckIsZUFBVSxHQUFHLENBQUMsQ0FBQztRQUVmLGlCQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLGlCQUFZLEdBQUcsRUFBRSxDQUFDO1FBRWxCLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3hCLGlCQUFZLEdBQVcsQ0FBQyxDQUFDO1FBQ3pCLGNBQVMsR0FBVyxDQUFDLENBQUM7UUFLMUIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRCx1QkFBSSxHQUFKO1FBQ0ksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQztRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxXQUFXLENBQUM7UUFDdEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFlLEdBQUcsU0FBUyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLFNBQVMsQ0FBQztRQUN2QyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUM7UUFDMUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDO1FBQzFCLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCwwQkFBTyxHQUFQO1FBQ0ksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNwQyxDQUFDO0lBR0QsNEJBQVMsR0FBVDtRQUFBLGlCQVFDO1FBUEcsSUFBSSxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUM7WUFDeEIsS0FBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ2hCLEtBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNmLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxRQUFRLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDdEIsS0FBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3BCLENBQUM7UUFDTCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDWixDQUFDO0lBRUQsOEJBQVcsR0FBWDtRQUNJLElBQU0sWUFBWSxHQUFHLGlCQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzNDLElBQU0sVUFBVSxHQUFHLGlCQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxXQUFXLEdBQUcsaUJBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztRQUNsRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUMsQ0FBQyxHQUFHLFVBQVUsR0FBQyxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2pDLGdDQUFjLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2xELGdDQUFjLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3JELGdDQUFjLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFdBQVcsR0FBRyxZQUFZLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsK0JBQVksR0FBWjtRQUFBLGlCQWdDQztRQS9CRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUN4QyxLQUFJLENBQUMsUUFBUSxDQUFDLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUNqQyxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsVUFBVSxHQUFHLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO2dCQUN0QyxnQ0FBYyxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMsSUFBSSxFQUFFLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDcEQsS0FBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBRXBCLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFO1lBQ3hDLEtBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxLQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDbEMsRUFBRSxDQUFDLENBQUMsS0FBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixnQ0FBYyxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNwQyxLQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFFcEIsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDMUMsS0FBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFDO1FBRUgsZUFBSyxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUU7WUFDbEIsS0FBSSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUM7WUFDeEIsS0FBSSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7UUFFSCxlQUFLLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRTtZQUNwQixLQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQztZQUN0QixLQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQztRQUM1QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCw4QkFBVyxHQUFYO1FBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztZQUNuQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxRQUFRLENBQUM7WUFDM0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQzlCLENBQUM7UUFBQSxJQUFJLENBQUEsQ0FBQztZQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztZQUMxQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxRQUFRLENBQUM7UUFDL0IsQ0FBQztJQUNMLENBQUM7SUFFRCwyQkFBUSxHQUFSO1FBQ0ksSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLE1BQU0sQ0FBQztRQUNwQyxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsR0FBRyxNQUFNLENBQUM7UUFDcEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDO1FBQzFCLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7UUFFcEMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELDJCQUFRLEdBQVIsVUFBUyxLQUFLO1FBQ1YsSUFBSSxDQUFDLFVBQVUsSUFBSSxLQUFLLENBQUM7UUFDekIsZ0NBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUNMLGVBQUM7QUFBRCxDQUFDLEFBcklELElBcUlDO0FBRUQsT0FBTyxDQUFDLFNBQVMsR0FBRyxVQUFVLElBQUk7SUFDOUIsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzlCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBidXR0b25Nb2R1bGUgPSByZXF1aXJlKFwidWkvYnV0dG9uXCIpO1xuaW1wb3J0IHtBYnNvbHV0ZUxheW91dH0gZnJvbSAndWkvbGF5b3V0cy9hYnNvbHV0ZS1sYXlvdXQnO1xuaW1wb3J0IEV2ZW50IGZyb20gJy4uLy4uL2V2ZW50L0V2ZW50JztcbmltcG9ydCB7Z2V0SGVpZ2h0fSBmcm9tIFwiLi4vLi4vdXRpbHMvdXRpbHNcIjtcblxuY2xhc3MgUHVzaEJhbGwge1xuXG4gICAgcHJpdmF0ZSB1c2VyMSA9IG51bGw7XG4gICAgcHJpdmF0ZSB1c2VyMiA9IG51bGw7XG4gICAgcHJpdmF0ZSBiYWxsID0gbnVsbDtcbiAgICBwcml2YXRlIHN0YWdlID0gbnVsbDtcbiAgICBwcml2YXRlIHJlZnJlc2ggPSBudWxsO1xuICAgIHByaXZhdGUgdGltZXIgPSBudWxsO1xuICAgIHByaXZhdGUgcmVzdFRpbWU6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBjdXJyZW50VG9wID0gMDtcblxuICAgIHByaXZhdGUgdXNlcjFNb3ZlTnVtID0gMTA7XG4gICAgcHJpdmF0ZSB1c2VyMk1vdmVOdW0gPSAxMDtcblxuICAgIHByaXZhdGUgc3RhZ2VIZWlnaHQ6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBib3R0b21FbmRUb3A6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBtaWRkbGVUb3A6IG51bWJlciA9IDA7XG5cbiAgICBwcml2YXRlIGludGVydmFsO1xuXG4gICAgY29uc3RydWN0b3Iodmlldykge1xuICAgICAgICB0aGlzLnVzZXIxID0gdmlldy5nZXRWaWV3QnlJZCgndXNlcjEnKTtcbiAgICAgICAgdGhpcy51c2VyMiA9IHZpZXcuZ2V0Vmlld0J5SWQoJ3VzZXIyJyk7XG4gICAgICAgIHRoaXMuYmFsbCA9IHZpZXcuZ2V0Vmlld0J5SWQoJ2JhbGwnKTtcbiAgICAgICAgdGhpcy5yZWZyZXNoID0gdmlldy5nZXRWaWV3QnlJZCgncmVmcmVzaCcpO1xuICAgICAgICB0aGlzLnN0YWdlID0gdmlldy5nZXRWaWV3QnlJZCgnc3RhZ2UnKTtcbiAgICAgICAgdGhpcy50aW1lciA9IHZpZXcuZ2V0Vmlld0J5SWQoJ3RpbWVyJyk7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMudXNlcjEudGV4dCA9ICdwbGF5ZXIxJztcbiAgICAgICAgdGhpcy51c2VyMi50ZXh0ID0gJ3BsYXllcjInO1xuICAgICAgICB0aGlzLnJlZnJlc2gudmlzaWJpbGl0eSA9ICdjb2xsYXBzZWQnO1xuICAgICAgICB0aGlzLnVzZXIxLmJhY2tncm91bmRDb2xvciA9ICcjZmZmN2QzJztcbiAgICAgICAgdGhpcy51c2VyMi5iYWNrZ3JvdW5kQ29sb3IgPSAnI2ZmZjdkMyc7XG4gICAgICAgIHRoaXMudXNlcjEuY29sb3IgPSAnIzAwMCc7XG4gICAgICAgIHRoaXMudXNlcjIuY29sb3IgPSAnIzAwMCc7XG4gICAgICAgIHRoaXMucmVzdFRpbWUgPSAxNTtcbiAgICAgICAgdGhpcy5zZXRUaW1lKCk7XG4gICAgICAgIHRoaXMuc2V0UG9zaXRpb24oKTtcbiAgICAgICAgdGhpcy5ldmVudFNldHRpbmcoKTtcbiAgICAgICAgdGhpcy5wbGF5VGltZXIoKTtcbiAgICB9XG5cbiAgICBzZXRUaW1lKCkge1xuICAgICAgICB0aGlzLnRpbWVyLnRleHQgPSB0aGlzLnJlc3RUaW1lO1xuICAgIH1cblxuXG4gICAgcGxheVRpbWVyKCkge1xuICAgICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5yZXN0VGltZS0tO1xuICAgICAgICAgICAgdGhpcy5zZXRUaW1lKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5yZXN0VGltZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZU92ZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgMTAwMClcbiAgICB9XG5cbiAgICBzZXRQb3NpdGlvbigpIHtcbiAgICAgICAgY29uc3QgcGxheWVySGVpZ2h0ID0gZ2V0SGVpZ2h0KHRoaXMudXNlcjEpO1xuICAgICAgICBjb25zdCBiYWxsSGVpZ2h0ID0gZ2V0SGVpZ2h0KHRoaXMuYmFsbCk7XG4gICAgICAgIHRoaXMuc3RhZ2VIZWlnaHQgPSBnZXRIZWlnaHQodGhpcy5zdGFnZSk7XG4gICAgICAgIHRoaXMuYm90dG9tRW5kVG9wID0gdGhpcy5zdGFnZUhlaWdodCAtIGJhbGxIZWlnaHQ7XG4gICAgICAgIHRoaXMubWlkZGxlVG9wID0gdGhpcy5zdGFnZUhlaWdodC8yIC0gYmFsbEhlaWdodC8yO1xuICAgICAgICB0aGlzLmN1cnJlbnRUb3AgPSB0aGlzLm1pZGRsZVRvcDtcbiAgICAgICAgQWJzb2x1dGVMYXlvdXQuc2V0VG9wKHRoaXMuYmFsbCwgdGhpcy5jdXJyZW50VG9wKTtcbiAgICAgICAgQWJzb2x1dGVMYXlvdXQuc2V0VG9wKHRoaXMucmVmcmVzaCwgdGhpcy5jdXJyZW50VG9wKTtcbiAgICAgICAgQWJzb2x1dGVMYXlvdXQuc2V0VG9wKHRoaXMudXNlcjIsIHRoaXMuc3RhZ2VIZWlnaHQgLSBwbGF5ZXJIZWlnaHQpO1xuICAgIH1cblxuICAgIGV2ZW50U2V0dGluZygpIHtcbiAgICAgICAgdGhpcy51c2VyMS5vbihidXR0b25Nb2R1bGUuQnV0dG9uLnRhcEV2ZW50LCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm1vdmVCYWxsKHRoaXMudXNlcjFNb3ZlTnVtKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRUb3AgPiB0aGlzLmJvdHRvbUVuZFRvcCkge1xuICAgICAgICAgICAgICAgIEFic29sdXRlTGF5b3V0LnNldFRvcCh0aGlzLmJhbGwsIHRoaXMuYm90dG9tRW5kVG9wKTtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWVPdmVyKCk7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy51c2VyMi5vbihidXR0b25Nb2R1bGUuQnV0dG9uLnRhcEV2ZW50LCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm1vdmVCYWxsKC10aGlzLnVzZXIyTW92ZU51bSk7XG4gICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50VG9wIDwgMCkge1xuICAgICAgICAgICAgICAgIEFic29sdXRlTGF5b3V0LnNldFRvcCh0aGlzLmJhbGwsIDApO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2FtZU92ZXIoKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnJlZnJlc2gub24oYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIEV2ZW50Lm9uKCdWT0xVTUVfVVAnLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnVzZXIxTW92ZU51bSA9IDEwMDtcbiAgICAgICAgICAgIHRoaXMudXNlcjJNb3ZlTnVtID0gNTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgRXZlbnQub24oJ1ZPTFVNRV9ET1dOJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy51c2VyMU1vdmVOdW0gPSA1O1xuICAgICAgICAgICAgdGhpcy51c2VyMk1vdmVOdW0gPSAxMDA7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNoZWNrV2lubmVyKCl7XG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRUb3AgPiB0aGlzLm1pZGRsZVRvcCkge1xuICAgICAgICAgICAgdGhpcy51c2VyMS50ZXh0ID0gJ3dpbm5lcic7XG4gICAgICAgICAgICB0aGlzLnVzZXIyLnRleHQgPSAnbG9zZXInO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHRoaXMudXNlcjEudGV4dCA9ICdsb3Nlcic7XG4gICAgICAgICAgICB0aGlzLnVzZXIyLnRleHQgPSAnd2lubmVyJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdhbWVPdmVyKCkge1xuICAgICAgICB0aGlzLnVzZXIxLm9mZihidXR0b25Nb2R1bGUuQnV0dG9uLnRhcEV2ZW50KTtcbiAgICAgICAgdGhpcy51c2VyMi5vZmYoYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCk7XG4gICAgICAgIHRoaXMudXNlcjEuYmFja2dyb3VuZENvbG9yID0gJyMzMzMnO1xuICAgICAgICB0aGlzLnVzZXIyLmJhY2tncm91bmRDb2xvciA9ICcjMzMzJztcbiAgICAgICAgdGhpcy51c2VyMS5jb2xvciA9ICcjZmZmJztcbiAgICAgICAgdGhpcy51c2VyMi5jb2xvciA9ICcjZmZmJztcbiAgICAgICAgdGhpcy5yZWZyZXNoLnZpc2liaWxpdHkgPSAndmlzaWJsZSc7XG5cbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcbiAgICAgICAgdGhpcy5jaGVja1dpbm5lcigpO1xuICAgIH1cblxuICAgIG1vdmVCYWxsKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuY3VycmVudFRvcCArPSB2YWx1ZTtcbiAgICAgICAgQWJzb2x1dGVMYXlvdXQuc2V0VG9wKHRoaXMuYmFsbCwgdGhpcy5jdXJyZW50VG9wKTtcbiAgICB9XG59XG5cbmV4cG9ydHMubmF2aWdhdGVkID0gZnVuY3Rpb24gKGFyZ3MpIHtcbiAgICBuZXcgUHVzaEJhbGwoYXJncy5vYmplY3QpO1xufTtcbiJdfQ==